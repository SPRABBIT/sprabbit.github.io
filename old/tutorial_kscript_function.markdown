---
layout: spengine
title: 函数 - KScript 教程
css:
 - shCore.css
 - shThemeKScript.css
js:
 - shCore.js
 - shBrushXML.js
 - shBrushKScript.js
 - highlight.js
---

##函数

KScript 的函数基本上是引擎系统函数，用于调用引擎内部对应的函数方法。

###调用函数

KScript 调用函数的格式如下：

<pre class="brush:ks">  
// 标准格式     
@函数名1{ 参数名1:参数值1 , 参数名2:参数值2 , ... };
@函数名2{ 
	参数名1:值1,
    参数名2:值2,
    ...
};

// 省略格式（省略逗号及分号）
@函数名1{ 参数名1:参数值1 参数名2:参数值2 ... }
@函数名2{ 
	参数名1:值1 
    参数名2:值2 
    ... 
}

// 最简格式（省略参数列表）
@函数名;
</pre>

因为这些函数都以“@”开头，所以 KScript 中的函数又称“AT函数”。SpeShow 的引擎系统函数，及其参数名列表将在其他章节中描述。

###自定义函数

这里的自定义与其他语言的定义函数有很大区别。这里的自定义，意思是执行一段脚本，其中某些变量的值可以指定。自定义函数并没有产生新的引擎系统函数，只是将一些脚本语句与函数组合起来。

自定义函数的格式如下：

<pre class="brush:ks">  
// 标准格式     
@自定义函数名(参数名1, 参数名2, ...)
{[
	// 在这里写脚本，函数将返回最后脚本最后一行的值
]};


// 省略格式（省略参数列表及分号）
@自定义函数名()
{
	// 在这里写脚本
}
</pre>

函数有两种，在 0.9 版本之前的KScript，函数脚本实际上是一个包含脚本内容的字符串，因此可以用"[]"包含，当然也可以用英文单引号或双引号。其中自定义函数名的命名规则跟变量的命名规则相同。

*SpeShow 0.9* 版本之后，函数是真正意义上的函数，并不是脚本字符串，并且所以不再需要用“[]”包含，并且可以用return返回值

调用自定义函数时，格式和调用其他引擎系统函数的格式一样：

<pre class="brush:ks">  
// 标准格式
@自定义函数名{ 
	自定参数1:值1,
    自定参数2:值2,
    ...
};

// 省略格式（省略逗号及分号）
@自定义函数名{ 
	自定参数1:值1 
    自定参数2:值2 
    ... 
}

// 最简格式（省略参数列表，无任何参数传入）
@自定义函数名;
</pre>

调用自定义函数时，将会执行一次定义好的脚本，执行之前将会按照参数列表的设置，初始化各变量。*各参数按值传入*，函数内的变量为*局部变量*，不会影响函数外的变量。调用自定义函数的参数列表与定义函数时的参数列表并*无直接关系*，定义时指定参数列表仅仅是为了注释，因此定义函数时可以完全省略参数列表。

下面是一个例子：

<pre class="brush:ks">  
// 定义一种由三个数参与的运算
@自定义运算(参数1, 参数2, 参数3)
{ 
	return 参数1 + 参数2 * 参数3;
}

// 调用自定义运算
结果 = @自定义运算{ 
	参数1: 1 
    参数2: 2 
    参数3: 3
}

// 这时变量“结果”的值为整数7（函数内的变量为局部变量）
</pre>

**********************************************************************

[上一节：运算](tutorial_kscript_operation.html)

[下一节：分支](tutorial_kscript_branch.html)
